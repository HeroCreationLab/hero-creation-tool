name: Release

on:
  push:
    branches:
      - main

env:
  node_version: 14

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Install node
      - name: install node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node_version }}

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - run: npm ci --cache .npm --prefer-offline

      - run: npm run build

      # Get the version from built 'module.json'
      - name: Get Version
        shell: bash
        id: get-version
        run: echo "::set-output name=version::$(node ./.github/workflows/get-version.js)"

      # Useful only for the template so we can leave the manifest and download urls empty
      - name: Substitute Manifest and Download Links For Versioned Ones
        id: sub_manifest_link_latest
        uses: microsoft/variable-substitution@v1
        with:
          files: './dist/module.json'
        env:
          url: https://github.com/${{github.repository}}
          manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
          download: https://github.com/${{github.repository}}/releases/latest/download/module.zip

      # Create a zip file with all files required by the module to add to the release
      - name: Zip Latest Release
        working-directory: ./dist
        run: zip -r ../module.zip ./*

      # Update the 'latest' release
      - name: Update Latest Release
        id: create_latest_release
        uses: ncipollo/release-action@v1
        if: endsWith(github.ref, 'main')
        with:
          allowUpdates: true
          name: Latest
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './dist/module.json, ./module.zip'
          tag: latest
      
      # Substitute the Manifest and Download URLs in the module.json
      - name: Substitute Manifest and Download Links For Versioned Ones
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: './dist/module.json'
        env:
          url: https://github.com/${{github.repository}}
          manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
          download: https://github.com/${{github.repository}}/releases/download/${{steps.get-version.outputs.version}}/module.zip
      
      # Create a zip file with all files required by the module to add to the release
      - name: Zip Version Release
        working-directory: ./dist
        run: zip -r ../module.zip ./*

      # Create a release for this specific version
      - name: Create Version Release
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # set this to false if you want to prevent updating existing releases
          name: Release ${{ steps.get-version.outputs.version }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './dist/module.json,./module.zip'
          tag: ${{ steps.get-version.outputs.version }}